group 'com.github.pgutkowski'
version '0.1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.2'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.3.1"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1"
    }
}

apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: "me.champeau.gradle.jmh"

repositories {
    mavenCentral()
    maven {
        url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
    }
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.15'

    compile "com.fasterxml.jackson.core:jackson-databind:2.8.7"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.7"

    testCompile "org.jetbrains.kotlinx:kotlinx-html-jvm:0.6.3"
    testCompile "io.netty:netty-all:4.1.9.Final"

    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.0.0-M4"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.0.0-M4"
    testCompile "org.hamcrest:hamcrest-all:1.3"
}

jmh {
    jmhVersion = '1.19'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

project.afterEvaluate {
    def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

    // configure jacoco to analyze the junitPlatformTest task
    jacoco {
        // this tool version is compatible with
        toolVersion = "0.7.6.201602180812"
        applyTo junitPlatformTestTask
    }

    // create junit platform jacoco task
    def junitPlatformJacocoReport = project.task(type: JacocoReport, "junitPlatformJacocoReport",
            {
                sourceDirectories = files("./src/main")
                classDirectories = files("$buildDir/classes/main")
                executionData junitPlatformTestTask

                reports {
                    xml.enabled = true // coveralls plugin depends on xml format report
                    html.enabled = true
                }
            })

    junitPlatformJacocoReport.dependsOn junitPlatformTestTask
}


